generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  USER
  OWNER
}

enum AccountStatus {
  UNVERIFIED
  ACTIVE
  SUSPENDED
  DELETED
}

enum PitchStatus {
  ACTIVE
  MAINTENANCE
  CLOSED
}

enum PitchPolicy {
  DEFAULT
  EXTENDED
  SHORT
}

enum PitchSize {
  FIVE_A_SIDE
  SEVEN_A_SIDE
  ELEVEN_A_SIDE
}

enum PitchSurface {
  GRASS
  ARTIFICIAL
}

enum PitchAmenity {
  INDOORS
  BALL_PROVIDED
  SEATING
  NIGHT_LIGHTS
  PARKING
  SHOWERS
  CHANGING_ROOMS
  CAFETERIA
  FIRST_AID
  SECURITY
}

model User {
  id                String        @id @default(cuid())
  name              String
  email             String        @unique
  phone             String        @unique
  password          String
  accountStatus     AccountStatus @default(UNVERIFIED)
  verificationToken String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  Reservation       Reservation[]
}

model Owner {
  id                String        @id @default(cuid())
  name              String
  email             String        @unique
  phone             String        @unique
  password          String
  company           String?
  accountStatus     AccountStatus @default(UNVERIFIED)
  verificationToken String?
  pitches           Pitch[]
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

model Pitch {
  id             String                               @id @default(cuid())
  ownerId        String
  name           String
  search         Unsupported("tsvector")
  description    String
  size           PitchSize
  surface        PitchSurface
  amenities      PitchAmenity[]
  images         String[]
  price          Float
  coordinates    Unsupported("geometry(Point, 4326)")
  status         PitchStatus                          @default(ACTIVE)
  policy         PitchPolicy                          @default(DEFAULT)
  minimumSession Int                                  @default(1)
  maximumSession Int                                  @default(3)
  createdAt      DateTime                             @default(now())
  updatedAt      DateTime                             @updatedAt
  owner          Owner                                @relation(fields: [ownerId], references: [id])
  Reservation    Reservation[]

  @@index([coordinates], name: "coordinates_idx", type: Gist)
}

model Reservation {
  id            String      @id @default(uuid())
  pitchId       String
  userId        String?
  reserveeName  String
  reserveePhone String
  startDate     DateTime
  endDate       DateTime
  pitch         Pitch       @relation(fields: [pitchId], references: [id])
  user          User?       @relation(fields: [userId], references: [id])
  createdBy     AccountType
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
